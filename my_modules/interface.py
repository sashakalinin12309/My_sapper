# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –Ω—É–∂–Ω—ã–µ –Ω–∞–º –º–æ–¥—É–ª–∏.
import tkinter as tk
from tkinter import messagebox
from functools import partial
from random import choice
import shutil

import my_modules.command_for_cells as command_for_cells

# –ê –¥–∞–ª—å—à–µ –∏–¥—É—Ç —Ñ—É–Ω–∫—Ü–∏–∏.

def create_root(color_for_root) -> tk.Tk:

    """
    –°–æ–∑–¥–∞–Ω–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        color_for_root - —Ü–≤–µ—Ç –¥–ª—è –±—É–¥—É—â–µ–≥–æ –æ–∫–Ω–∞

    –í–æ–∑—Ä–∞—â–∞–µ—Ç:
        –æ–∫–Ω–æ c —Ç–∞–∫–∏–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:
        - —Ä–∞–∑–º–µ—Ä 300—Ö400;
        - –Ω–µ–∏–∑–º–µ–Ω—è–µ–º–æ–µ;
        - –Ω–∞–∑–≤–∞–Ω–∏–µ '–°–∞–ø—ë—Ä';
        - —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–π –∏–∫–æ–Ω–∫–æ–π;
        - —Ü–≤–µ—Ç–∞ color_for_root.
    """
    
    root = tk.Tk()  # –°–æ–∑–¥–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ.
    root.geometry('300x400')  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –µ–≥–æ —Ä–∞–∑–º–µ—Ä.
    root.title("–°–∞–ø—ë—Ä")  # –î–∞–µ–º –µ–º—É –Ω–∞–∑–≤–∞–Ω–∏–µ.
    root.iconbitmap("image//icon//icon_for_application.ico")  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –µ–º—É –∏–∫–æ–Ω–∫—É.
    root['bg'] = color_for_root  # –ü—Ä–∏–¥–∞–µ–º –µ–º—É —Ü–≤–µ—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –ø—Ä–∏ –ø—Ä–æ—à–ª–æ–º –≤—ã—Ö–æ–¥–µ.
    root.resizable(False, False)  # –ó–∞–ø—Ä–µ—â–∞–µ–º –º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä.
    
    return root  # –í –∏—Ç–æ–≥–µ –≤–æ–∑—Ä–∞—â–∞–µ–º –æ–∫–Ω–æ.

def create_field(color_for_field: str, color_for_cell: str, money_counter: tk.Label, matrix: tuple, btn_flags: tk.Button, timer: tk.Button, color_for_number: str="black") -> tk.Canvas:

    """
    –°–æ–∑–¥–∞–µ—Ç –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ —Å —è—á–µ–π–∫–∞–º–∏ –¥–ª—è —Ö–æ–¥–æ–≤.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - color_for_field - —Ü–≤–µ—Ç –¥–ª—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è;
    - color_for_cell - —Ü–≤–µ—Ç –¥–ª—è —è—á–µ–µ–∫ –ø–æ–ª—è;
    - money_counter - —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–∏–¥–∂–µ—Ç —Å –∫–æ–ª-–≤–æ–º –º–æ–Ω–µ—Ç –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–π –≤–Ω–µ –¥–∞–Ω–Ω–æ–π;
    - matrix - —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è (—Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –º–∏–Ω, —á–∏—Å–µ–ª –∏ —Ç. –¥.);
    - btn_flags - —è—á–µ–π–∫–∞ —Å –∫–æ–ª-–≤–æ–º –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ñ–ª–∞–∂–∫–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 
    –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é, –≥–¥–µ –¥–∞–Ω–Ω—ã–π –≤–∏–¥–∂–µ—Ç –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è;
    - timer - —è—á–µ–π–∫–∞ —Å –∫–æ–ª-–≤–æ–º –≤—Ä–µ–º–µ–Ω, –∑–∞—Ç—Ä–∞—á–µ–Ω–Ω–æ–≥–æ –Ω–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –∏–≥—Ä—ã.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –¥–∞–Ω–Ω—ã—Ö —Å —è—á–µ–π–∫–∏ –≤ –¥—Ä—É–≥—É—é —Ñ—É–Ω–∫—Ü–∏—é, –≥–¥–µ –æ–Ω–∞ –Ω—É–∂–Ω–∞;
    - color_for_number (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - 'black') - —Ü–≤–µ—Ç –¥–ª—è —á–∏—Å–µ–ª –Ω–∞ –ø–æ–ª–µ.

    –í–æ–∑—Ä–∞—â–∞–µ—Ç:
        –ò–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ –∫–ª–∞—Å—Å–∞ tk.Canvas.
    """
    
    # –°–æ–∑–¥–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ.
    field = tk.Canvas(
        bg = color_for_field
    )

    coordinates_bombs = []  # –°–ø–∏—Å–æ–∫, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥—É—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –±–æ–º–±.
    coordinates_button = {}  # –°–ª–æ–≤–∞—Ä—å, –≤ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ö—Ä–∞–Ω–∏—Ç—å—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å–µ—Ö —è—á–µ–π–∫–∞—Ö.
    criterion_for_win = []  # –°–ø–∏—Å–æ–∫ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –≤—Å–µ—Ö —è—á–µ–µ–∫. –ë—É–¥–µ—Ç –Ω—É–∂–µ–Ω –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –ø–æ–±–µ–¥—ã.

    # –ú–µ—Å—Ç–∞, –≥–¥–µ –±—É–¥–µ—Ç —Å—Ç–∞–≤–∏—Ç—å—Å—è –∫—Ä–µ—Å—Ç–∏–∫ - –ë–ï–ó–û–ü–ê–°–ù–û–ï –Ω–∞—á–∞–ª–æ –∏–≥—Ä—ã.
    good_buttons = {
        9: (4, 4),
        15: (7, 7),
        21: (10, 10)
    }

    start_button = good_buttons[len(matrix)]  # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ë–ï–ó–û–ü–ê–°–ù–û–ï –Ω–∞—á–∞–ª–æ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —Ä–µ–∂–∏–º–æ–º.

    for i in range(len(matrix)):
        for j in range(len(matrix)):

            # –ó–∞–ø–æ–ª–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —Å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º–∏ –±–æ–º–±, –µ—Å–ª–∏ —è—á–µ–π–∫–∞ —Å –±–æ–º–±–æ–π.
            if matrix[i][j] == "üí£":
                coordinates_bombs.append((i, j))

            # –°–æ–∑–¥–∞–µ–º —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –ø–æ–º–æ–≥–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å, –≥–¥–µ –±–æ–º–±—ã.
            # –ë—É–¥—É—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –∫–Ω–æ–∫–ø–∫–∞–º–∏, –ø—Ä–∏–¥–∞–≤–∞—è —Ñ–æ—Ä–º—É –∏–≥—Ä–æ–≤–æ–º—É –ø–æ–ª—é. 
            text = tk.Label(field, text=matrix[i][j], font="Arial 14", width=2, fg=color_for_number, bg=color_for_field)
            text.grid(row = i, column = j)

            # –í—ã–±–æ—Ä —Ü–≤–µ—Ç–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫ (–º–æ–∂–µ—Ç –ø–æ–ø–∞—Å—Ç—å—Å—è —Ü–≤–µ—Ç random).
            final_color_for_cell = color_for_cell if color_for_cell != "random" else choice(("aqua", "blue", "darkviolet", "green", "grey", "lightgreen", "lightgrey", "orange", "pink", "red", "violet", "yellow", "white"))
            
            cell = tk.Button(field, bg=final_color_for_cell, width=2, activebackground=final_color_for_cell)  # –°–æ–∑–¥–∞–Ω–∏–µ —è—á–µ–π–∫–∏.
        
            coordinates_button[(i, j)] = (cell, matrix[i][j], [color_for_cell])  # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü—é –æ —è—á–µ–π–∫–µ –≤ —Å–ª–æ–≤–∞—Ä—å.
            criterion_for_win.append((i, j))  # –ü–µ—Ä–µ–¥–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —è—á–µ–π–∫–∏ –≤ —Å–ø–∏—Å–æ–∫ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ –ø–æ–±–µ–¥—É.
            command_lmb = partial(command_for_cells.command_for_cell_lmb, cell, (i, j), timer, money_counter, coordinates_button, field, coordinates_bombs, criterion_for_win)  # –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –ª–µ–≤—É—é –∫–Ω–æ–ø–∫—É –º—ã—à–∏.
            command_rmb = partial(command_for_cells.command_for_cell_rmb, cell, btn_flags, coordinates_button, (i, j))   # –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —Å—Ä–∞–±–æ—Ç–∞–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –ª–µ–≤—É—é –∫–Ω–æ–ø–∫—É –º—ã—à–∏.
            # –ü–µ—Ä–µ–¥–∞–µ–º –≤—Å–µ —ç—Ç–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–Ω–æ–ø–∫–µ.
            cell.bind("<ButtonPress-1>", command_lmb)
            cell.bind("<ButtonPress-3>", command_rmb)

            if (i, j) == start_button: cell["text"] = "‚ùå"  # –Ø–≤–ª—è–µ—Å—è –ª–∏ –∫–Ω–æ–ø–∫–∞ "–ë–ï–ó–û–ü–ê–°–ù–´–ú –Ω–∞—á–∞–ª–æ–º", –∏ –ø–æ–º–µ—á–∞—Ç—å –ª–∏ –µ–µ –∫—Ä–µ—Å—Ç–∏–∫–æ–º?

            cell.grid(row = i, column = j)  # –†–∞–∑–º–µ—â–∞–µ–º —è—á–µ–π–∫—É –Ω–∞ –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ.

    return field  # –í–æ–∑—Ä–∞—â–∞–µ–º –∏–≥—Ä–æ–≤–æ–µ –ø–æ–ª–µ.


def restart(root: tk.Tk, command_for_restart) -> None:

    """
    –°–æ–∑–¥–∞–µ—Ç —è—á–µ–π–∫—É —Å —Ñ—É–Ω–∫—Ü–∏–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - field - –æ–∫–Ω–æ, –≥–¥–µ —Ä–∞–∑–º–µ—â–∞–µ—Ç—Å—è —è—á–µ–π–∫–∞;
    - command_for_restart - –∫–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞.

    –í–æ–∑—Ä–∞—â–∞–µ—Ç: –Ω–∏—á–µ–≥–æ, –ø—Ä–æ—Å—Ç–æ —è—á–µ–π–∫—É —Å–æ–∑–¥–∞–µ—Ç.
    """

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ –∏–≥—Ä—ã.
    restart_button = tk.Button(root, text="‚ü≥", fg="red", width=2, command=command_for_restart)
    restart_button.place(x=140, y=50)

def close_root(root: tk.Tk, stop_running_process) -> None:

    """
    –°–æ–∑–¥–∞–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç - –¥–∞, —Ç–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è
    —Ç–∞–π–º–µ—Ä, –æ—á–∏—â–∞–µ—Ç—Å—è –∫—ç—à, –∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç—Å—è. –í –∏–Ω–æ–º —Å–ª—É—á–∞–µ –Ω–∏—á–µ–≥–æ –Ω–µ 
    –ø—Ä–æ—Å–∏—Ö–æ–¥–∏—Ç.

    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
    - root - –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –∑–∞–∫—Ä–æ–µ—Ç—Å—è –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ;
    - stop_running_process - –∫–æ–º–∞–Ω–¥–∞, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—â–∞—è
    –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –ø—Ä–æ–≥—Ä–∞–º–º—ã.

    –í–æ–∑—Ä–∞—â–∞–µ—Ç: –Ω–∏—á–µ–≥–æ.
    """

    # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞—Å—á–µ—Ç –≤—ã–∫–ª—é—á–µ–Ω–∏—è.
    if messagebox.askokcancel(message="–¢–æ—á–Ω–æ —Ö–æ—Ç–∏—Ç–µ –≤—ã–π—Ç–∏?", title="–í—ã–π—Ç–∏ –∏–ª–∏ –Ω–µ –≤—ã–π—Ç–∏ - –≤–æ—Ç –≤ —á–µ–º –≤–æ–ø—Ä–æ—Å!"):

        root.destroy()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ.
        
        stop_running_process()  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –∏–≥—Ä—ã.

        try:
            shutil.rmtree('my_modules//__pycache__')  # –£–¥–∞–ª—è–µ–º –∫—ç—à.
        except FileNotFoundError:
            pass  # –ï—Å–ª–∏ –ø–∞–ø–∫–∏ —Å –∫—ç—à–æ–º –Ω–µ—Ç.

        